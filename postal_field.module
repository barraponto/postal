<?php // $Id$
/*
  TODO/wishlist:
   - Get ISO-3166-1 (and -2??) data for countries (and states??)
   - implement a nicer theme for form, including dropdowns and stuff
   - widget settings to show/hide various fields (names, country, etc.)
   - Add field_settings:tables/arguments/filters for field components (zip, street, etc)
 */

function postal_field_field_info() {
  return array(
    'postal' => array('label' => t('Postal Address')),
  );
}

function postal_field_field($op, &$node, $field, &$node_field, $teaser, $page) {
  switch ($op) {
    case 'validate':
  }
}

function postal_field_field_settings($op, $field) {
  switch ($op) {
    case 'database columns':
      return postal_database_columns();
  }
}

function postal_field_widget_info() {
  return array(
    'postal' => array(
      'label' => t('Address form'),
      'field types' => array('postal'),
    ),
  );
}

/**
 * Implementation of hook_field_formatter_info().
 */
function postal_field_field_formatter_info() {
  return array(
    'default' => array(
      'label' => 'Default',
      'field types' => array('postal'),
    ),
  );
}

/**
 * Implementation of hook_field_formatter().
 */
function postal_field_field_formatter($field, $item, $formatter, $node) {
  switch ($formatter) {
    default: 
      return theme('postal_address', $item);
  }
}

function postal_field_widget($op, &$node, $field, &$items) {
  switch ($op) {
    case 'form':
      // General set up for all postal fields.
      $name = $field['field_name'];
      $form = array();
      $form[$name]['#type'] = 'fieldset';
      $form[$name]['#tree'] = TRUE;
      $form[$name]['#title'] = $field['widget']['label'];

      if (!$items || $field['multiple']) {
        $items[] = (array) postal_address();
      }
      
      foreach ($items as $delta => $data) {
        $data['id'] = $name .'-'. $delta;
        $form[$name][$delta] = array(
          '#type' => 'postal',
          '#postal_address' => $data,
        ); 
      }

      return $form;
  }
}
